{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Countries","useState","countries","setCountries","getCountries","searched","document","getElementById","value","url","fetch","then","r","json","d","useEffect","setTimeout","addEventListener","length","map","country","className","src","flag","style","margin","name","nativeName","fontSize","region","subregion","capital","population","languages","lg","join","currencies","currency","code","callingCodes","status","App","textAlign","fontWeight","type","id","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8MAqBA,IAAMA,EAAY,WAChB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KASA,SAASC,IACPD,EAAa,IACb,IAAIE,EAAWC,SAASC,eAAe,eAAeC,MACrC,KAAbH,IAAmBA,EAAW,cAClC,IAAMI,EAAG,gDAA4CJ,GACrDK,MAAMD,GAAKE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAG,GAAC,OAAIX,EAAaW,MAGxD,OAfAC,oBAAUX,EAAc,IAExBY,YAAW,WACPV,SAASC,eAAe,aAAaU,iBAAiB,QAASb,GAC/DE,SAASC,eAAe,eAAeU,iBAAiB,SAAUb,KACnE,KAUCF,EAAUgB,OAAS,EAEnBhB,EAAUiB,KAAI,SAAAC,GACZ,OACE,sBAAKC,UAAU,UAAf,UACE,qBAAKC,IAAKF,EAAQG,OAClB,qBAAIC,MAAO,CAAEC,OAAQ,UAArB,UACGL,EAAQM,KADX,KACmBN,EAAQO,WAD3B,OAGA,oBAAGH,MAAO,CAAEC,OAAQ,IAAKG,SAAU,QAAnC,UACE,wCADF,IACkBR,EAAQS,OAD1B,IACkC,uBAChC,4CAFF,IAEsBT,EAAQU,UAF9B,IAEyC,uBACvC,yCAHF,IAGmBV,EAAQW,QAH3B,IAGoC,uBAClC,4CAJF,IAIsBX,EAAQY,WAJ9B,IAI0C,uBACxC,2CALF,IAKqBZ,EAAQa,UAAUd,KAAI,SAAAe,GAAE,OAAIA,EAAGR,QAAMS,KAAK,MAL/D,IAKsE,uBACpE,4CANF,IAMsBf,EAAQgB,WAAWjB,KAAI,SAAAkB,GAAQ,OAAIA,EAASX,KAAO,IAAMW,EAASC,KAAO,OAAKH,KAAK,MANzG,IAMgH,uBAC9G,+CAPF,IAOyBf,EAAQmB,aAAaJ,KAAK,eAM7B,IAArBjC,EAAUgB,OAAuB,4CACd,MAArBhB,EAAUsC,OAAyB,uDAAvC,GAGQC,EA7Df,WACE,OACE,sBAAKpB,UAAU,MAAf,UACE,sBAAKG,MAAO,CAAEkB,UAAW,UAAzB,UACE,gDAAkB,qBAAKlB,MAAO,CAAEI,SAAU,OAAQe,WAAY,UAA5C,oCAClB,uBAAOC,KAAK,OAAOC,GAAG,cAAcC,YAAY,2BAChD,uBAAOF,KAAK,SAASpC,MAAM,SAASqC,GAAG,iBAEzC,qBAAKxB,UAAU,YAAf,SACE,cAAC,EAAD,UCDO0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnD,SAASC,eAAe,SAM1BwC,K","file":"static/js/main.21903ff9.chunk.js","sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div style={{ textAlign: 'center' }}>\n        <h1>Countries API <sub style={{ fontSize: '16px', fontWeight: 'normal' }}>made using React.js</sub></h1>\n        <input type=\"text\" id=\"searchInput\" placeholder=\"type country name here\" />\n        <input type=\"button\" value=\"Search\" id=\"searchBut\" />\n      </div>\n      <div className=\"container\">\n        <Countries></Countries>\n      </div>\n    </div>\n  );\n}\n\n\n\nconst Countries = () => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(getCountries, []);\n\n  setTimeout(() => {\n    { document.getElementById('searchBut').addEventListener('click', getCountries) };\n    { document.getElementById('searchInput').addEventListener('change', getCountries) };\n  }, 1000)\n\n  function getCountries() {\n    setCountries([]);\n    let searched = document.getElementById('searchInput').value;\n    if (searched === '') { searched = 'Bangladesh' };\n    const url = `https://restcountries.eu/rest/v2/name/${searched}`;\n    fetch(url).then(r => r.json()).then(d => setCountries(d));\n  }\n\n  if (countries.length > 0) {\n    return (\n      countries.map(country => {\n        return (\n          <div className=\"country\">\n            <img src={country.flag} />\n            <h3 style={{ margin: '10px 0' }}>\n              {country.name} ({country.nativeName})\n            </h3>\n            <p style={{ margin: '0', fontSize: '17px' }}>\n              <b>Region:</b> {country.region} <br />\n              <b>Sub-region:</b> {country.subregion} <br />\n              <b>Capital:</b> {country.capital} <br />\n              <b>Population:</b> {country.population} <br />\n              <b>Languages:</b> {country.languages.map(lg => lg.name).join(', ')} <br />\n              <b>Currencies:</b> {country.currencies.map(currency => currency.name + '(' + currency.code + ')').join(', ')} <br />\n              <b>Calling-codes:</b> {country.callingCodes.join(', ')}\n            </p>\n          </div>\n        )\n      })\n    )\n  } else if (countries.length === 0) { return <h2>Loading...</h2> }\n  else if (countries.status === 404) { return <h2>Nothing found..!</h2> }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}